version: '3.8'

services:
  # Base de datos PostgreSQL con configuración optimizada
  postgres:
    image: postgres:15-alpine
    container_name: turismo_db
    environment:
      POSTGRES_DB: turismo
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=es_EC.UTF-8 --lc-ctype=es_EC.UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - turismo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d turismo"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend Flask con configuración de accesibilidad
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: turismo_backend
    environment:
      FLASK_ENV: production
      FLASK_APP: app.py
      DATABASE_URL: postgresql://admin:admin123@postgres:5432/turismo
      CORS_ORIGINS: "*"
      # Configuraciones de seguridad y accesibilidad
      SECRET_KEY: "turismo_ecuador_2024_secret_key"
      SESSION_COOKIE_SECURE: "false"
      SESSION_COOKIE_HTTPONLY: "true"
      SESSION_COOKIE_SAMESITE: "Lax"
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    ports:
      - "5000:5000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - turismo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Servidor web Nginx optimizado para accesibilidad
  nginx:
    image: nginx:alpine
    container_name: turismo_nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./index.html:/usr/share/nginx/html/index.html:ro
      - ./css:/usr/share/nginx/html/css:ro
      - ./img:/usr/share/nginx/html/img:ro
      - ./logs/nginx:/var/log/nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - turismo_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis para cache y sesiones (opcional)
  redis:
    image: redis:7-alpine
    container_name: turismo_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - turismo_network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru

  # Certbot para SSL automático (opcional)
  certbot:
    image: certbot/certbot
    container_name: turismo_certbot
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - nginx
    networks:
      - turismo_network
    command: certonly --webroot --webroot-path=/var/www/certbot --email admin@turismoecuador.com --agree-tos --no-eff-email -d turismoecuador.com -d www.turismoecuador.com

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  turismo_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
